{"ast":null,"code":"var _jsxFileName = \"G:\\\\College-Management-System-master\\\\frontend\\\\src\\\\Screens\\\\UpdatePassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport axiosWrapper from \"../utils/AxiosWrapper\";\nimport CustomButton from \"../components/CustomButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePassword = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    resetId,\n    type\n  } = useParams();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    if (!resetId) {\n      toast.error(\"Invalid or expired reset link.\");\n      navigate(\"/\");\n    }\n  }, [resetId, navigate]);\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      toast.error(\"Passwords do not match.\");\n      return;\n    }\n    if (!type) {\n      toast.error(\"Invalid Reset Password Link.\");\n      return;\n    }\n    setIsLoading(true);\n    toast.loading(\"Resetting your password...\");\n    try {\n      const response = await axiosWrapper.post(`/${type}/update-password/${resetId}`, {\n        password: newPassword,\n        resetId\n      });\n      toast.dismiss();\n      if (response.data.success) {\n        toast.success(\"Password reset successfully.\");\n        navigate(\"/\");\n      } else {\n        toast.error(response.data.message || \"Error resetting password.\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.dismiss();\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error resetting password.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-tr from-gray-100 via-white to-gray-100 flex items-center justify-center px-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-2xl lg:w-1/2 px-6 py-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold text-gray-800 text-center mb-6\",\n        children: \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"w-full p-8 bg-white rounded-2xl shadow-xl border border-gray-200\",\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-800 text-sm font-medium mb-2\",\n            htmlFor: \"newPassword\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"newPassword\",\n            onChange: e => setNewPassword(e.target.value),\n            value: newPassword,\n            required: true,\n            className: \"w-full px-4 py-2 text-sm border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-800 text-sm font-medium mb-2\",\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            onChange: e => setConfirmPassword(e.target.value),\n            value: confirmPassword,\n            required: true,\n            className: \"w-full px-4 py-2 text-sm border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          disabled: isLoading,\n          className: \"w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2.5 px-4 rounded-lg transition duration-200\",\n          children: isLoading ? \"Resetting...\" : \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"bottom-center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdatePassword, \"/FYDh1jvju+yT5AIqUvn0MI2IlA=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = UpdatePassword;\nexport default UpdatePassword;\nvar _c;\n$RefreshReg$(_c, \"UpdatePassword\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","toast","Toaster","axiosWrapper","CustomButton","jsxDEV","_jsxDEV","UpdatePassword","_s","navigate","resetId","type","newPassword","setNewPassword","confirmPassword","setConfirmPassword","isLoading","setIsLoading","error","onSubmit","e","preventDefault","loading","response","post","password","dismiss","data","success","message","_error$response","_error$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","target","value","required","disabled","position","_c","$RefreshReg$"],"sources":["G:/College-Management-System-master/frontend/src/Screens/UpdatePassword.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport axiosWrapper from \"../utils/AxiosWrapper\";\nimport CustomButton from \"../components/CustomButton\";\n\nconst UpdatePassword = () => {\n  const navigate = useNavigate();\n  const { resetId, type } = useParams();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!resetId) {\n      toast.error(\"Invalid or expired reset link.\");\n      navigate(\"/\");\n    }\n  }, [resetId, navigate]);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      toast.error(\"Passwords do not match.\");\n      return;\n    }\n    if (!type) {\n      toast.error(\"Invalid Reset Password Link.\");\n      return;\n    }\n    setIsLoading(true);\n    toast.loading(\"Resetting your password...\");\n\n    try {\n      const response = await axiosWrapper.post(\n        `/${type}/update-password/${resetId}`,\n        { password: newPassword, resetId }\n      );\n\n      toast.dismiss();\n      if (response.data.success) {\n        toast.success(\"Password reset successfully.\");\n        navigate(\"/\");\n      } else {\n        toast.error(response.data.message || \"Error resetting password.\");\n      }\n    } catch (error) {\n      toast.dismiss();\n      toast.error(error.response?.data?.message || \"Error resetting password.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-tr from-gray-100 via-white to-gray-100 flex items-center justify-center px-4\">\n      <div className=\"w-full max-w-2xl lg:w-1/2 px-6 py-12\">\n        <h1 className=\"text-4xl font-bold text-gray-800 text-center mb-6\">\n          Update Password\n        </h1>\n        <form\n          className=\"w-full p-8 bg-white rounded-2xl shadow-xl border border-gray-200\"\n          onSubmit={onSubmit}\n        >\n          <div className=\"mb-6\">\n            <label\n              className=\"block text-gray-800 text-sm font-medium mb-2\"\n              htmlFor=\"newPassword\"\n            >\n              New Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"newPassword\"\n              onChange={(e) => setNewPassword(e.target.value)}\n              value={newPassword}\n              required\n              className=\"w-full px-4 py-2 text-sm border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n\n          <div className=\"mb-6\">\n            <label\n              className=\"block text-gray-800 text-sm font-medium mb-2\"\n              htmlFor=\"confirmPassword\"\n            >\n              Confirm Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              value={confirmPassword}\n              required\n              className=\"w-full px-4 py-2 text-sm border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n\n          <CustomButton\n            type=\"submit\"\n            disabled={isLoading}\n            className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2.5 px-4 rounded-lg transition duration-200\"\n          >\n            {isLoading ? \"Resetting...\" : \"Reset Password\"}\n          </CustomButton>\n        </form>\n      </div>\n      <Toaster position=\"bottom-center\" />\n    </div>\n  );\n};\n\nexport default UpdatePassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}